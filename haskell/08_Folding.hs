-- fold right
-- foldr :: (a -> b -> b) -> b -> [a] -> b
-- example
-- foldr (+) 0 [1,2,...,n] = 1 + 2 + ... + n + 0
-- and then you can build functions like
-- sum = foldr (+) 0
-- and = foldr (&&) True
-- or = foldr (||) True
-- foldr (\<elem> <acc> -> <term>) <start_acc> <list>
-- count e = foldr (\x acc -> if e == x then acc+1 else acc) 0
-- isAll e = foldr (\x acc -> e==x && acc) True
-- length = foldr (\x acc -> acc + 1 ) 0

-- foldl (\<acc> <elem> -> <term>) <start_acc> <list>